# infra/network/cilium/helmrelease.yaml
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cilium
  namespace: flux-system
spec:
  releaseName: cilium
  targetNamespace: kube-system
  interval: 30m
  timeout: 10m
  chart:
    spec:
      chart: cilium
      version: 1.17.8
      sourceRef:
        kind: HelmRepository
        name: cilium
        namespace: flux-system
      interval: 10m
  install:
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      remediateLastFailure: true
      retries: 3
    resetValues: true
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
  values:
    # ==========================================
    # CRITICAL: Talos Linux Specific Settings
    # ==========================================

    # CRITICAL: Use host network so init containers can reach API
    # before CNI is ready (chicken-egg problem)
    hostNetwork: true

    # Disable kube-proxy replacement for now (enable later)
    kubeProxyReplacement: false

    # Talos uses CRI (not dockershim)
    containerRuntime:
      integration: containerd

    # CRITICAL: Talos-specific cgroup configuration
    cgroup:
      autoMount:
        enabled: false  # Talos handles this
      hostRoot: /sys/fs/cgroup

    # CRITICAL: Talos doesn't mount BPF filesystem by default
    bpf:
      autoMount:
        enabled: false  # Talos handles this
      root: /sys/fs/bpf

    # Talos-specific sysctls (already set by Talos)
    securityContext:
      capabilities:
        ciliumAgent:
          - CHOWN
          - KILL
          - NET_ADMIN
          - NET_RAW
          - IPC_LOCK
          - SYS_ADMIN
          - SYS_RESOURCE
          - DAC_OVERRIDE
          - FOWNER
          - SETGID
          - SETUID
        cleanCiliumState:
          - NET_ADMIN
          - SYS_ADMIN
          - SYS_RESOURCE

    # ==========================================
    # Networking Configuration
    # ==========================================

    ipam:
      mode: kubernetes  # Use Kubernetes' native IPAM

    # Use tunnel mode (VXLAN) - works best initially
    routingMode: tunnel
    tunnelProtocol: vxlan
    
    # Enable IPv4, disable IPv6 (unless you need it)
    ipv4:
      enabled: true
    ipv6:
      enabled: false
    
    # ==========================================
    # API Server Configuration
    # ==========================================
    
    # CRITICAL: Use host network to reach API during init
    # This bypasses the Service ClusterIP which doesn't work yet
    k8sServiceHost: "192.168.1.155"
    k8sServicePort: "6443"
    
    # Skip waiting for k8s during init
    operator:
      skipCRDCreation: false
    
    # ==========================================
    # Operator Configuration
    # ==========================================

    operator:
      replicas: 1  # Start with 1, can increase to 2 later
      rollOutPods: true
      prometheus:
        enabled: true
        serviceMonitor:
          enabled: false  # Enable if you have Prometheus Operator

    # ==========================================
    # Hubble (Observability)
    # ==========================================

    hubble:
      enabled: true
      metrics:
        enabled:
          - dns:query
          - drop
          - tcp
          - flow
          - icmp
          - http
      relay:
        enabled: true
        replicas: 1
      ui:
        enabled: true
        replicas: 1

    # ==========================================
    # Monitoring
    # ==========================================

    prometheus:
      enabled: true
      serviceMonitor:
        enabled: false  # Enable when you have Prometheus Operator

    # ==========================================
    # Additional Settings
    # ==========================================

    # Enable health checks
    endpointHealthChecking:
      enabled: true

    # Bandwidth management
    bandwidthManager:
      enabled: false  # Can enable later for better performance

    # Pod restart on policy enforcement
    policyEnforcementMode: "default"

    # Enable host firewall (optional, for added security)
    hostFirewall:
      enabled: false  # Can enable later

    # L7 proxy settings
    l7Proxy: true

    # Enable local redirect policy (optional)
    localRedirectPolicy: false
