apiVersion: apps/v1
kind: Deployment
metadata:
  name: adguard
  namespace: adguard
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adguard
  template:
    metadata:
      labels:
        app: adguard
    spec:
      # run only on workers
      nodeSelector:
        node-role.do/amd-work: "true"
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: adguard
          image: adguard/adguardhome:latest
          imagePullPolicy: IfNotPresent
          ports:
            # Web UI (we'll send Ingress here)
            - name: http
              containerPort: 3000
              protocol: TCP
            # Optional: if you later switch UI to 80/443 in AdGuard, add those too
          volumeMounts:
            - name: data
              mountPath: /opt/adguardhome/work
            - name: conf
              mountPath: /opt/adguardhome/conf
          # AdGuard needs CAP_NET_BIND_SERVICE only if binding <1024 inside the container (we use 3000 for UI here)
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              memory: 512Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: adguard-data
        # keep config inside the same PVC by subPath so both paths persist
        - name: conf
          persistentVolumeClaim:
            claimName: adguard-data
          # AdGuard writes conf/ and work/ separately; a single PVC is fine
